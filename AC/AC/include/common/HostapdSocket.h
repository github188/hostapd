/******************************************************************************
模块名      : HostapdSocket
文件名      : HostapdSocket.h
相关文件    :
实现功能    : WTP与AC之间的IOCTL/L2/EVENT SOCKET通信接口封装
修改记录    :
------------------------------------------------------------------------------
日期        修改人      修改内容
2008/05/27  叶恩云      创建
******************************************************************************/

#ifndef HOSTAPD_SOCKET_H
#define HOSTAPD_SOCKET_H

#ifndef __GNUC__
#pragma pack(1)
#endif

#ifdef __cplusplus
extern "C" {
#endif


#include "OssApi.h"
#include "common.h"


/*SOCKET转发事件号定义*/
#define EV_HOSTAPD_SOCKET_BEGIN		(WORD16)(EV_HOSTAPD_BEGIN + 1)

/*WTP与AC之间的消息号定义*/
#define EV_HOSTAPD_SOCKET_IOCTL		(WORD16)(EV_HOSTAPD_SOCKET_BEGIN + 0)
#define EV_HOSTAPD_SOCKET_EVENT		(WORD16)(EV_HOSTAPD_SOCKET_BEGIN + 1)
#define EV_HOSTAPD_SOCKET_EAPOL		(WORD16)(EV_HOSTAPD_SOCKET_BEGIN + 2)
#define EV_HOSTAPD_SOCKET_PREAUTH	(WORD16)(EV_HOSTAPD_SOCKET_BEGIN + 3)

/*AC侧两线程间消息号定义*/
#define EV_HOSTAPD_SOCKET_RADIUS		(WORD16)(EV_HOSTAPD_SOCKET_BEGIN + 4)

/*WTP侧两线程间消息号定义*/
#define EV_HOSTAPD_SOCKET_EVENT_WTP	(WORD16)(EV_HOSTAPD_SOCKET_BEGIN + 5)
#define EV_HOSTAPD_SOCKET_L2			(WORD16)(EV_HOSTAPD_SOCKET_BEGIN + 6)
#define EV_HOSTAPD_SOCKET_EVENTACK		(WORD16)(EV_HOSTAPD_SOCKET_BEGIN + 7)

#define EV_HOSTAPD_SOCKET_END			(WORD16)(EV_HOSTAPD_BEGIN + 9)

/*VAP操作事件号定义*/
#define EV_HOSTAPD_VAP_BEGIN			(WORD16)(EV_HOSTAPD_BEGIN + 10)
#define EV_HOSTAPD_VAP_CREATE			(WORD16)(EV_HOSTAPD_VAP_BEGIN + 0)
#define EV_HOSTAPD_VAP_DESTROY		(WORD16)(EV_HOSTAPD_VAP_BEGIN + 1)
#define EV_HOSTAPD_VAP_START			(WORD16)(EV_HOSTAPD_VAP_BEGIN + 2)
#define EV_HOSTAPD_VAP_STOP			(WORD16)(EV_HOSTAPD_VAP_BEGIN + 3)
#define EV_HOSTAPD_VAP_CREATE_NACK	(WORD16)(EV_HOSTAPD_VAP_BEGIN + 4)
#define EV_HOSTAPD_VAP_END			(WORD16)(EV_HOSTAPD_BEGIN + 19)

/*WTP操作事件号定义*/
#define EV_HOSTAPD_WTP_BEGIN			(WORD16)(EV_HOSTAPD_BEGIN + 20)
#define EV_HOSTAPD_WTP_INIT			(WORD16)(EV_HOSTAPD_WTP_BEGIN + 0)
#define EV_HOSTAPD_WTP_SLAVE_INIT	(WORD16)(EV_HOSTAPD_WTP_BEGIN + 1)
#define EV_HOSTAPD_WTP_END			(WORD16)(EV_HOSTAPD_BEGIN + 29)

/*即时定时器事件*/
#define EV_HOSTAPD_TIMER				(WORD16)(EV_HOSTAPD_BEGIN + 30)

/* AP流控，chary，2011-11-8  */
#define EV_HOSTAPD_ADD_USER			(WORD16)(EV_HOSTAPD_BEGIN + 40)	 

/*HOSTAPD消息ACK*/
#define EV_HOSTAPD_MSG_ACK			(WORD16)(EV_HOSTAPD_BEGIN + 31)

/*WTP与AC之间SOCKET转发消息头定义*/
typedef struct{
	BYTE ucFromInterface ;	/*发送方接口编号，从0开始，全1为无效值*/
	BYTE ucFromBss ;		/*发送方VAP 编号，从0开始，全1为无效值*/
	BYTE ucToInterface ;		/*接收方接口编号，从0开始，全1为无效值*/
	BYTE ucToBss ;			/*接收方VAP 编号，从0开始，全1为无效值*/
}STRUCT_PACKED HOSTAPD_HEAD_T ;

/**********************************TLV**************************************/
/*
	TAG										LEN						VALUE
	-------------------------------------------------------------------------
	HOSTAPD_ELEMID_COMMON_DEVICENAME		variable(<=IFNAMSIZ)		VAP设备名
	HOSTAPD_ELEMID_COMMON_BRIDGE			variable(<=IFNAMSIZ)		bridge设备名
	HOSTAPD_ELEMID_COMMON_MAC			6						MAC地址，字节流
	HOSTAPD_ELEMID_COMMON_DATA			variable					字节流
	HOSTAPD_ELEMID_COMMON_PROTO			2						协议值，如ETH_P_EAPOL || ETH_P_PREAUTH
	HOSTAPD_ELEMID_EVENT_CMD				2						IWEVEXPIRED || IWEVREGISTERED || IWEVCUSTOM etc.
	HOSTAPD_ELEMID_EVENT_DATA				variable					对应不同的CMD，不同的内容
	HOSTAPD_ELEMID_PREAUTH_NAMES			variable(<=IFNAMSIZ)		PREAUTH设备名列表，以空格分隔
	HOSTAPD_ELEMID_COMMON_WTPID,			4						WTP设备编号
	HOSTAPD_ELEMID_COMMON_IFID,			4						INTERFACE设备编号
	HOSTAPD_ELEMID_COMMON_VAPID,			4						VAP设备编号
*/

enum{
	HOSTAPD_ELEMID_COMMON_BEGIN = 0 ,
	HOSTAPD_ELEMID_COMMON_DEVICENAME ,
	HOSTAPD_ELEMID_COMMON_BRIDGE ,
	HOSTAPD_ELEMID_COMMON_MAC ,
	HOSTAPD_ELEMID_COMMON_DATA ,
	HOSTAPD_ELEMID_COMMON_PROTO, 
	HOSTAPD_ELEMID_COMMON_WTPID,
	HOSTAPD_ELEMID_COMMON_IFID,
	HOSTAPD_ELEMID_COMMON_VAPID,
	HOSTAPD_ELEMID_COMMON_AUTHID,
	HOSTAPD_ELEMID_COMMON_ACCTID,
	HOSTAPD_ELEMID_COMMON_RADIUSTYPE,
	HOSTAPD_ELEMID_COMMON_RADIUSPOOLID,
	HOSTAPD_ELEMID_COMMON_RADIUSSETID,
	HOSTAPD_ELEMID_COMMON_MSGID,
	HOSTAPD_ELEMID_COMMON_MACLIST,
	
	HOSTAPD_ELEMID_EVENT_BEGIN = 200 ,
	HOSTAPD_ELEMID_EVENT_CMD ,	/*IWEVEXPIRED || IWEVREGISTERED || IWEVCUSTOM*/
	HOSTAPD_ELEMID_EVENT_DATA ,
	HOSTAPD_ELEMID_EVENT_ASSOCID ,
	HOSTAPD_ELEMID_EVENT_REASON,
	HOSTAPD_ELEMID_EVENT_ID,
	
	HOSTAPD_ELEMID_EAPOL_BEGIN = 300 ,
	HOSTAPD_ELEMID_EAPOL_DATA ,
	HOSTAPD_ELEMID_EAPOL_KEYRSC , 
	
	HOSTAPD_ELEMID_PREAUTH_BEGIN = 400 ,
	HOSTAPD_ELEMID_PREAUTH_NAMES ,
	HOSTAPD_ELEMID_PREAUTH_INIT ,
	HOSTAPD_ELEMID_PREAUTH_DEINIT ,
	HOSTAPD_ELEMID_PREAUTH_DATA ,
	
	HOSTAPD_ELEMID_VAP_BEGIN = 500 ,

	HOSTAPD_ELEMID_SOCKET_BEGIN = 600 ,
	HOSTAPD_ELEMID_SOCKET_ELOOP ,
	HOSTAPD_ELEMID_SOCKET_USER ,
	HOSTAPD_ELEMID_SOCKET_DATA ,

	HOSTAPD_ELEMID_FC_UPRATE = 700,		/*  AP流控，上行限速chary，2011-11-8 */
	HOSTAPD_ELEMID_FC_DOWNRATE,	/*  AP流控，下行限速chary，2011-11-8 */
	HOSTAPD_ELEMID_FC_BURSTSIZE,		/*  AP流控，突发字节chary，2011-11-8 */
	
	/*ELEMID_IOCTL_ID定义等同于内核IOCTL值*/
	HOSTAPD_ELEMID_IOCTL_BEGIN = 0x8B00 ,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWCOMMIT = 0x8B00 ,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWSENS	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWSENS	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWRANGE	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWRANGE	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWPRIV	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWPRIV	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWSTATS	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWSTATS	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWSPY		,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWSPY	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWTHRSPY	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWTHRSPY	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWAP		,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWAP    	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWMLME	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWAPLIST	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWSCAN	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWSCAN	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWESSID	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWESSID	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWNICKN	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWNICKN	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWRATE	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWRATE	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWRTS		,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWRTS	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWFRAG	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWFRAG	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWTXPOW	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWTXPOW	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWRETRY	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWRETRY	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWENCODE	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWENCODE	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWPOWER	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWPOWER	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWGENIE	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWGENIE	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWAUTH	,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWAUTH	,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWENCODEEXT ,
	HOSTAPD_ELEMID_IOCTL_SIOCGIWENCODEEXT ,
	HOSTAPD_ELEMID_IOCTL_SIOCSIWPMKSA	,

	HOSTAPD_ELEMID_IOCTL_SIOCIWFIRSTPRIV  = 0x8BE0 ,
	HOSTAPD_ELEMID_IOCTL_SETPARAM = 0x8BE0 ,
	HOSTAPD_ELEMID_IOCTL_GETPARAM	    ,
	HOSTAPD_ELEMID_IOCTL_SETMODE	    ,
	HOSTAPD_ELEMID_IOCTL_GETMODE	    ,
	HOSTAPD_ELEMID_IOCTL_SETWMMPARAMS ,
	HOSTAPD_ELEMID_IOCTL_GETWMMPARAMS ,
	HOSTAPD_ELEMID_IOCTL_SETCHANLIST	,
	HOSTAPD_ELEMID_IOCTL_GETCHANLIST	,
	HOSTAPD_ELEMID_IOCTL_CHANSWITCH	,
	HOSTAPD_ELEMID_IOCTL_SIOCIWFIRSTPRIV9 ,
	HOSTAPD_ELEMID_IOCTL_SIOCIWFIRSTPRIV10 ,
	HOSTAPD_ELEMID_IOCTL_SIOCIWFIRSTPRIV11 ,
	HOSTAPD_ELEMID_IOCTL_SIOCIWFIRSTPRIV12 ,
	HOSTAPD_ELEMID_IOCTL_GETCHANINFO ,
	HOSTAPD_ELEMID_IOCTL_SETOPTIE	   ,
	HOSTAPD_ELEMID_IOCTL_GETOPTIE	   ,
	HOSTAPD_ELEMID_IOCTL_SETMLME	   ,
	HOSTAPD_ELEMID_IOCTL_SIOCIWFIRSTPRIV17 ,
	HOSTAPD_ELEMID_IOCTL_SETKEY	,	
	HOSTAPD_ELEMID_IOCTL_SIOCIWFIRSTPRIV19 ,
	HOSTAPD_ELEMID_IOCTL_DELKEY ,
	HOSTAPD_ELEMID_IOCTL_SIOCIWFIRSTPRIV21 ,
	HOSTAPD_ELEMID_IOCTL_ADDMAC ,
	HOSTAPD_ELEMID_IOCTL_SIOCIWFIRSTPRIV23 ,
	HOSTAPD_ELEMID_IOCTL_DELMAC ,
	HOSTAPD_ELEMID_IOCTL_SIOCIWFIRSTPRIV25 ,
	HOSTAPD_ELEMID_IOCTL_WDSADDMAC ,
	HOSTAPD_ELEMID_IOCTL_SIOCIWFIRSTPRIV27 ,
	HOSTAPD_ELEMID_IOCTL_WDSDELMAC ,
	HOSTAPD_ELEMID_IOCTL_SIOCIWFIRSTPRIV29 ,
	HOSTAPD_ELEMID_IOCTL_KICKMAC ,
	HOSTAPD_ELEMID_IOCTL_SIOCIWFIRSTPRIV31 ,
	HOSTAPD_ELEMID_IOCTL_SIOCIWLASTPRIV  = 0x8BFF , 
} ;

typedef struct{
	DWORD dwElemId ;
	DWORD dwLength ;	/*消息长度，包括本消息头*/
	/*不同的ELEMID，后面跟随不同的内容*/
}STRUCT_PACKED HOSTAPD_ELEM_T ;

BYTE * AddElem(BYTE * pbFrame, DWORD dwElemId, BYTE * pbData, DWORD dwDataLen) ;

#ifdef __cplusplus
}
#endif

#ifndef __GNUC__
#pragma pack()
#endif

#endif
